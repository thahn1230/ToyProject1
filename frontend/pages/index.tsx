import { useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import type { NextPage } from 'next';
import styled from 'styled-components';
import useMap from './useMap';


import {
  ChatBody,
  ChatContainer,
  ChatHeader,
  ChatInput,
  ChatMessages,
  HomeBody,
  HomeHeader,
  MapContainer,
} from "../components/home/home.styles";

// const inter = Inter({ subsets: ["latin"] });

const MapBox = styled.div`
  width: 800px;
  height: 800px;
`;


export default function Home() {

  useMap();
  const [data, setData] = useState([]);

  useEffect(() => {
    fetch("http://10.221.71.35:8000/", {
      method: "GET",
      headers: {
        Authorization: `Bearer`,
        "Content-Type": "application/json",
      },
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((response) => {
        console.log(response);
        setData(JSON.parse(response));
      })
      .catch((error) => console.error("Error:", error));
  });
  const [messages, setMessages] = useState<Array<string>>([]);
  const [newMessage, setNewMessage] = useState<string>("");

  const handleSendMessage = () => {
    if (newMessage.trim() !== "") {
      setMessages([...messages, newMessage]);
      setNewMessage("");
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        {/* <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <HomeHeader>Header</HomeHeader>
      <HomeBody>
        <MapContainer>
        <MapBox id="map"></MapBox> {/* MapBox 컴포넌트 사용 */}
        </MapContainer>
        <ChatContainer>
          <ChatHeader>ChatHeader</ChatHeader>
          <ChatBody>
            <ChatMessages>
              {" "}
              {messages.map((message, index) => (
                <div key={index} className="message">
                  {message}
                </div>
              ))}
            </ChatMessages>
            <ChatInput
              value={newMessage}
              onChange={(e) => setNewMessage(e.target.value)}
            />
            <button onClick={handleSendMessage}>전송</button>
          </ChatBody>
        </ChatContainer>
      </HomeBody>
    </>
  );
}
